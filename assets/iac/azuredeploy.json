{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "administratorPassword": {
            "metadata": {
                "description": "Password of the administrator users."
            },
            "type": "securestring"
        },
        "templatesBaseUri": {
            "defaultValue": "https://raw.githubusercontent.com/EldertGrootenboer/Creating-a-hybrid-and-multi-cloud-strategy-using-Azure-API-Management/master/assets/iac",
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "functionApp",
            "dependsOn":[
                "[resourceId('Microsoft.Resources/deployments', 'storageAccount')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templatesBaseUri'), '/function-app.json')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "storageAccount",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templatesBaseUri'), '/storage-account.json')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "sqlServer",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templatesBaseUri'), '/sql-server.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "administratorPassword": {
                        "value": "[parameters('administratorPassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "keyVault",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'apiManagement')]",
                "[resourceId('Microsoft.Resources/deployments', 'functionApp')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templatesBaseUri'), '/key-vault.json')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "applicationInsights",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templatesBaseUri'), '/application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "apiManagement",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'applicationInsights')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templatesBaseUri'), '/api-management.json')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "virtualMachine",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templatesBaseUri'), '/virtual-machine.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "frontDoor",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'apiManagement')]",
                "[resourceId('Microsoft.Resources/deployments', 'virtualMachine')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('templatesBaseUri'), '/front-door.json')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        }
    ]
}