{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "conferenceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the conference for which we are creating the resource."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location where we want to deploy the resource."
            },
            "defaultValue": "westeurope"
        },
        "creationDate": {
            "type": "string",
            "metadata": {
                "description": "Date when the resource was deployed."
            },
            "defaultValue": "[utcNow()]"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "Eldert"
        },
        "adminPassword": {
            "type": "securestring"
        }
    },
    "variables": {
        "conferenceNameForResources": "[replace(toLower(parameters('conferenceName')), ' ', '-')]",
        "virtualMachineNamePrepared": "[concat('vm-hmc-', variables('conferenceNameForResources'))]",
        "virtualMachineName": "[if(lessOrEquals(length(variables('virtualMachineNamePrepared')), 15), variables('virtualMachineNamePrepared'), substring(variables('virtualMachineNamePrepared'), 0, 15))]",
        "storageAccountNamePrepared": "[replace(concat('sahmc', variables('conferenceNameForResources')), '-', '')]",
        "storageAccountName": "[if(lessOrEquals(length(variables('storageAccountNamePrepared')), 24), variables('storageAccountNamePrepared'), substring(variables('storageAccountNamePrepared'), 0, 24))]",
        "networkInterfaceName": "[concat('nic-', variables('virtualMachineName'))]",
        "networkSecurityGroupName": "[concat('nsg-', variables('virtualMachineName'))]",
        "virtualNetworkName": "[concat('vnet-', variables('virtualMachineName'))]",
        "publicIpAddressName": "[concat('pip-', variables('virtualMachineName'))]",
        "domainName": "[replace(variables('conferenceNameForResources'), '-', '')]",
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "tags": {
                "CreationDate": "[parameters('creationDate')]",
                "Demo": "Self Hosted Gateway",
                "Project": "Creating a hybrid and multi-cloud strategy using Azure API Management",
                "Purpose": "Demo"
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow"
                },
                "accessTier": "Hot"
            }
        },
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            },
            "tags": {
                "Conference": "[parameters('conferenceName')]",
                "CreationDate": "[parameters('creationDate')]",
                "Demo": "Self Hosted Gateway",
                "Project": "Creating a hybrid and multi-cloud strategy using Azure API Management",
                "Purpose": "Demo"
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "priority": 300,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    },
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    },
                    {
                        "name": "HTTP",
                        "properties": {
                            "priority": 340,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "80"
                        }
                    },
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 360,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            },
            "tags": {
                "Conference": "[parameters('conferenceName')]",
                "CreationDate": "[parameters('creationDate')]",
                "Demo": "Self Hosted Gateway",
                "Project": "Creating a hybrid and multi-cloud strategy using Azure API Management",
                "Purpose": "Demo"
            }
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.1.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24"
                        }
                    }
                ]
            },
            "tags": {
                "Conference": "[parameters('conferenceName')]",
                "CreationDate": "[parameters('creationDate')]",
                "Demo": "Self Hosted Gateway",
                "Project": "Creating a hybrid and multi-cloud strategy using Azure API Management",
                "Purpose": "Demo"
            }
        },
        {
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[variables('domainName')]"
                }
            },
            "sku": {
                "name": "Basic"
            },
            "tags": {
                "Conference": "[parameters('conferenceName')]",
                "CreationDate": "[parameters('creationDate')]",
                "Demo": "Self Hosted Gateway",
                "Project": "Creating a hybrid and multi-cloud strategy using Azure API Management",
                "Purpose": "Demo"
            }
        },
        {
            "name": "[variables('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2_v3"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "19h2-pro",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                },
                "licenseType": "Windows_Client",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/')]"
                    }
                }
            },
            "tags": {
                "Conference": "[parameters('conferenceName')]",
                "CreationDate": "[parameters('creationDate')]",
                "Demo": "Self Hosted Gateway",
                "Project": "Creating a hybrid and multi-cloud strategy using Azure API Management",
                "Purpose": "Demo"
            }
        },
        {
            "name": "[concat('shutdown-computevm-', variables('virtualMachineName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
            ],
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "19:00"
                },
                "timeZoneId": "W. Europe Standard Time",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]",
                "notificationSettings": {
                    "status": "Disabled",
                    "notificationLocale": "en",
                    "timeInMinutes": "30"
                }
            },
            "tags": {
                "Conference": "[parameters('conferenceName')]",
                "CreationDate": "[parameters('creationDate')]",
                "Demo": "Self Hosted Gateway",
                "Project": "Creating a hybrid and multi-cloud strategy using Azure API Management",
                "Purpose": "Demo"
            }
        }
    ]
}